## 문제 2
# 어느 음식점에서 새로운 메뉴를 개발하여 이 메뉴에 대한 선호도를 조사하기로 하였다.
# 고객 100명을 임의추출하여 이 메뉴에 대한 반응을 조사하였더니 이들 중 4/5가 선호한다고 하였다.
# 전체 고객의 새로운 메뉴에 대한 선호도를 p라 할 때, 모비율 p에 대한 신뢰도 95%의 신뢰구간을 구하시오.
```{r}
## 문제 2
# 어느 음식점에서 새로운 메뉴를 개발하여 이 메뉴에 대한 선호도를 조사하기로 하였다.
# 고객 100명을 임의추출하여 이 메뉴에 대한 반응을 조사하였더니 이들 중 4/5가 선호한다고 하였다.
# 전체 고객의 새로운 메뉴에 대한 선호도를 p라 할 때, 모비율 p에 대한 신뢰도 95%의 신뢰구간을 구하시오.
# n이 30을 넘어 꽤 크다고 가정하면 표본비율이 근사적으로 정규분포를
# 따른다는 가정을 이용해 문제를 풀도록 하겠다.
prop.test(800, 1000, 4/5, alternative = "two.sided", conf.level = 0.95)
font_import(pattern = 'TmonMonsori')
library(dplyr)
library(stringr)
library(tm)
library(ggplot2)
library(showtext)
library(RColorBrewer)
library(extrafont)
library(nycflights13)
library(tidyverse)
library(lubridate)
font_import(pattern = 'TmonMonsori')
buildDictionary(ext_dic = "woorimalsam")
rl <- readLines("review.txt", encoding = "euc-kr")
rl <- gsub("'","",rl)
rl <- gsub("‘","",rl)
rl <- gsub("“","",rl)
rl <- gsub("”","",rl)
rl <- gsub('[ㄱ-ㅎ]','',rl)
rl <- gsub('(ㅜ|ㅠ)+','',rl)
rl <- gsub('[~!@#$%^&*()_+=?]<>','',rl)
rl <- gsub("\\d+","",rl)
rl <- gsub("\\n","",rl)
rl <- gsub("\\.","",rl)
rl <- gsub("\n","",rl)
rl <- gsub("-","",rl)
rl <- gsub("영화","",rl)
rl <- gsub("한","",rl)
rl <- gsub("말","",rl)
rl <- gsub("것","",rl)
rl <- gsub("번","",rl)
rl <- gsub("내","",rl)
rl <- gsub("점","",rl)
rl <- gsub("때","",rl)
rl <- gsub("화","",rl)
rl <- gsub("적","",rl)
rl <- gsub("중","",rl)
rl <- gsub("이","",rl)
rl <- gsub("이영","",rl)
rl <- gsub("몇","",rl)
rl <- gsub("년","",rl)
rl <- gsub("수","",rl)
rll <- lapply(rl, extractNoun)
buildDictionary(ext_dic = "woorimalsam")
setwd("D:/Workspace/R_Project/crawling_pro")
buildDictionary(ext_dic = "woorimalsam")
library(KoNLP)
# remove.packages("rJava")
# install.packages("rJava")
# library(xlsx)
library(dplyr)
library(stringr)
library(wordcloud2)
library(tm)
buildDictionary(ext_dic = "woorimalsam")
rl <- readLines("review.txt", encoding = "euc-kr")
rl <- gsub("'","",rl)
rl <- gsub("'","",rl)
rl <- gsub("‘","",rl)
rl <- gsub("“","",rl)
rl <- gsub("”","",rl)
rl <- gsub('[ㄱ-ㅎ]','',rl)
rl <- gsub('(ㅜ|ㅠ)+','',rl)
rl <- gsub('[~!@#$%^&*()_+=?]<>','',rl)
rl <- gsub("\\d+","",rl)
rl <- gsub("\\n","",rl)
rl <- gsub("\\.","",rl)
rl <- gsub("\n","",rl)
rl <- gsub("-","",rl)
rll <- lapply(rl, extractNoun)
rll <- sapply(rl, extractNoun)
rll
rll <- lapply(rl, extractNoun)
rll
gsub_txt <- readLines("c_gsub.txt")
gsub_txt
cnt_txt <- length(gsub_txt)
for (i in 1:cnt_txt) {
rll <- gsub((gsub_txt[i]),"",rll))
}
rll <- gsub((gsub_txt[i]),"",rll)
for (i in 1:cnt_txt) {
rll <- gsub((gsub_txt[i]),"",rll)
}
# rll <- gsub("나","",rll)
# rll <- gsub("런","",rll)
# rll <- gsub("제","",rll)
# rll <- gsub("을","",rll)
# rll <- gsub("만","",rll)
# rll <- gsub("것","",rll)
# rll <- gsub("볼","",rll)
# rll <- gsub("위","",rll)
# rll <- gsub("들","",rll)
# rll <- gsub("라","",rll)
rlf <- Filter(function(x) ( nchar(x) <= 7 & nchar(x) >= 2),rll)
rlu <- unlist(rlf)
sw <- sort(table(rlu), decreasing = T)
head(sw,30)
wordcloud2(sw)
